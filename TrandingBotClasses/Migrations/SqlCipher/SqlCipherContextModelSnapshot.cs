// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrandingBotClasses.Context;

#nullable disable

namespace TrandingBotClasses.Migrations.SqlCipher
{
    [DbContext(typeof(SqlCipherContext))]
    partial class SqlCipherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TrandingBotClasses.CBinance", b =>
                {
                    b.Property<Guid>("CBinanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ContaId");

                    b.Property<string>("apiKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("apiSecret")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("CBinanceId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("TrandingBotClasses.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CBinanceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GoogleSheetsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.HasIndex("CBinanceId")
                        .IsUnique();

                    b.HasIndex("GoogleSheetsId")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TrandingBotClasses.GoogleSheets", b =>
                {
                    b.Property<Guid>("GoogleSheetsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("PlanilhaId");

                    b.Property<string>("SheetID")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TabName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("GoogleSheetsId");

                    b.ToTable("Planilhas");
                });

            modelBuilder.Entity("TrandingBotClasses.Trade", b =>
                {
                    b.Property<Guid>("TradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContaCBinanceId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("comission")
                        .HasColumnType("TEXT");

                    b.Property<string>("comissionAsset")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("orderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("qty")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("quoteQty")
                        .HasColumnType("TEXT");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("time")
                        .HasColumnType("TEXT");

                    b.HasKey("TradeId");

                    b.HasIndex("ContaCBinanceId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("TrandingBotClasses.Cliente", b =>
                {
                    b.HasOne("TrandingBotClasses.CBinance", "Conta")
                        .WithOne("Cliente")
                        .HasForeignKey("TrandingBotClasses.Cliente", "CBinanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrandingBotClasses.GoogleSheets", "Sheets")
                        .WithOne("Cliente")
                        .HasForeignKey("TrandingBotClasses.Cliente", "GoogleSheetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("Sheets");
                });

            modelBuilder.Entity("TrandingBotClasses.Trade", b =>
                {
                    b.HasOne("TrandingBotClasses.CBinance", "Conta")
                        .WithMany("Trades")
                        .HasForeignKey("ContaCBinanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("TrandingBotClasses.CBinance", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();

                    b.Navigation("Trades");
                });

            modelBuilder.Entity("TrandingBotClasses.GoogleSheets", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
